[{"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/App.js":"1","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/Navbar/Navbars.js":"2","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/index.js":"3","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/reportWebVitals.js":"4","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/Documentation.js":"5","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/About.js":"6","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/HomePage.js":"7","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/services/fecthing.js":"8","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/services/requestApiKey.js":"9","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/Explorer.js":"10","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/ApiKeyForm.js":"11","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/hooks/useSearch.js":"12"},{"size":750,"mtime":1612272304591,"results":"13","hashOfConfig":"14"},{"size":766,"mtime":1612271417039,"results":"15","hashOfConfig":"14"},{"size":637,"mtime":1612268345335,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1612185621027,"results":"17","hashOfConfig":"14"},{"size":99,"mtime":1612268133726,"results":"18","hashOfConfig":"14"},{"size":96,"mtime":1612268153606,"results":"19","hashOfConfig":"14"},{"size":591,"mtime":1612788557997,"results":"20","hashOfConfig":"14"},{"size":367,"mtime":1612798562673,"results":"21","hashOfConfig":"14"},{"size":436,"mtime":1612369864380,"results":"22","hashOfConfig":"14"},{"size":3609,"mtime":1612800209092,"results":"23","hashOfConfig":"14"},{"size":3493,"mtime":1612788480773,"results":"24","hashOfConfig":"14"},{"size":781,"mtime":1612798692452,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gkvnxm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/App.js",[],["55","56"],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/Navbar/Navbars.js",[],["57","58"],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/index.js",[],["59","60"],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/reportWebVitals.js",[],["61","62"],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/Documentation.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/About.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/HomePage.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/services/fecthing.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/services/requestApiKey.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/Explorer.js",["63"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport useSearch from \"../../hooks/useSearch\";\n\nimport \"./HomePage.scss\";\n\nconst BASE_URL = process.env.REACT_APP_API_URL;\n\nexport default function Explorer() {\n  const [url, setUrl] = useState(BASE_URL + `/api`);\n  const [apiKey, setApiKey] = useState(localStorage.getItem(\"apiKey\"));\n  const [query, setQuery] = useState(\"\");\n  const [route, setRoute] = useState(\"\");\n  const { statusCode, status, message, data } = useSearch({\n    url,\n  });\n\n  function handleApiKeyInput(e) {\n    setApiKey(e.target.value);\n    localStorage.setItem(\"apiKey\", e.target.value);\n  }\n\n  function updateUrl(route, apiKey, query) {\n    const newUrl = `${BASE_URL}/api${route}?key=${apiKey}${query}`;\n    setUrl(newUrl);\n\n    //534d9e33-f4df-4e3c-af0c-f3ec8abccc36\n  }\n\n  return (\n    <div>\n      <Form>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"basic-addon3\" className=\"url-inputField\">\n            {url}\n          </InputGroup.Text>\n          <Button\n            onClick={() => {\n              updateUrl(route, apiKey, query);\n            }}\n          >\n            Explore!\n          </Button>\n        </InputGroup>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"2\">\n            Your Key :\n          </Form.Label>\n          <Col sm=\"10\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Insert your key here!\"\n              value={apiKey}\n              onChange={handleApiKeyInput}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"2\">\n            Route :\n          </Form.Label>\n          <Col sm=\"10\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Insert your key here!\"\n              value={route}\n              onChange={(e) => {\n                setRoute(e.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"2\">\n            Query :\n          </Form.Label>\n          <Col sm=\"10\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"/seasons\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col>\n            <Container className=\"pre-container\">\n              <Form.Label column sm=\"2\">\n                <p className=\"bold\">Data:</p>\n                <h4\n                  className={status === \"Success\" ? \"color_green\" : \"color_red\"}\n                >\n                  {status}\n                </h4>\n                <p className=\"bold\">\n                  Status Code:\n                  <h4\n                    className={statusCode === 200 ? \"color_green\" : \"color_red\"}\n                  >\n                    {statusCode}\n                  </h4>\n                </p>\n              </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                className=\"textareaExample data-displayed\"\n                rows={16}\n                value={JSON.stringify(data, null, 4)}\n                readOnly\n              ></Form.Control>\n            </Container>\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n","/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/components/HomePage/ApiKeyForm.js",[],"/home/afafibrahimi/Desktop/ReinExercises/theVampireDiares-api/client/src/hooks/useSearch.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":20,"column":31,"nodeType":"77","messageId":"78","endLine":20,"endColumn":38},{"ruleId":"75","severity":1,"message":"76","line":20,"column":33,"nodeType":"77","messageId":"78","endLine":20,"endColumn":40},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],["79"],["80"],["79"],["80"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]